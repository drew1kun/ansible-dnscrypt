---
# handlers file for ansible-dnscrypt

# DNSMasq
- name: Restart pihole-FTL
  ansible.builtin.service:
    name: pihole-FTL
    state: restarted
  become: true
  when: dnscrypt_on_pihole

# No SystemD
- name: Run 'dnscrypt-proxy -service restart'
  ansible.builtin.command:
    cmd: "{{ dnscrypt_bin }} -service restart"
  become: true
  changed_when: false
  when: not dnscrypt_systemd.stat.exists

# SystemD
- name: Make sure built-in dnscrypt-proxy service is stopped, running 'dnscrypt-proxy -service stop'
  ansible.builtin.command:
    cmd: "{{ dnscrypt_bin }} -service stop"
    creates: /var/run/dnscrypt-proxy.pid
  become: true
  listen: Restart dnscrypt-proxy.socket systemd unit
  when: not dnscrypt_systemd.stat.exists

- name: Make sure dnscrypt-proxy.service is stopped before restarting dnscrypt-proxy.socket
  ansible.builtin.service:
    name: dnscrypt-proxy.service
    state: stopped
  become: true
  listen: Restart dnscrypt-proxy.socket systemd unit
  when: dnscrypt_systemd.stat.exists

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  become: true
  listen: Restart dnscrypt-proxy.socket systemd unit
  when: dnscrypt_systemd.stat.exists

- name: Restart dnscrypt-proxy.socket
  ansible.builtin.service:
    name: dnscrypt-proxy.socket
    enabled: true
    state: restarted
  become: true
  listen: Restart dnscrypt-proxy.socket systemd unit
  when: dnscrypt_systemd.stat.exists
...
