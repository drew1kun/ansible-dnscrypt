---


- name: 'Pi-hole related tasks'
  tags:
    - dnscrypt
    - dnscrypt_pihole
  block:
    - name: '[pihole] Collect unique IP addresses and ports from PIHOLE_DNS entries'
      ansible.builtin.shell: "grep '^PIHOLE_DNS_' /etc/pihole/setupVars.conf | grep -oP '(?<=PIHOLE_DNS_\\d=)[^#]+' | sort -u"
      register: unique_pihole_dns_ips
      ignore_errors: true
      changed_when: false

    - name: '[pihole] Remove all PIHOLE_DNS_ lines from /etc/pihole/setupVars.conf, including commented lines'
      ansible.builtin.lineinfile:
        path: /etc/pihole/setupVars.conf
        regexp: '^\s*#?\s*PIHOLE_DNS_'
        state: absent
        backup: yes

    - name: '[pihole] Add PIHOLE_DNS_1 entry'
      ansible.builtin.lineinfile:
        path: /etc/pihole/setupVars.conf
        line: 'PIHOLE_DNS_1={{ dnscrypt_ipv4_address }}#{{ dnscrypt_port }}'
        state: present
        backup: true
      notify: Restart pihole-FTL

    - name: '[pihole] Add remaining PIHOLE_DNS_ entries'
      ansible.builtin.lineinfile:
        path: /etc/pihole/setupVars.conf
        line: 'PIHOLE_DNS_{{ item_index + 2 }}={{ item }}'
        state: present
        backup: true
      loop: "{{ unique_pihole_dns_ips.stdout_lines | reject('equalto', dnscrypt_ipv4_address) | list }}"
      vars:
        item_index: "{{ ansible.utils.index_of(unique_pihole_dns_ips.stdout_lines, item) }}"
      when: item_index < 3
      notify: Restart pihole-FTL

    - name: '[pihole] Get current server entries in /etc/dnsmasq.d/01-pihole.conf'
      ansible.builtin.command: grep '^server=' /etc/dnsmasq.d/01-pihole.conf
      register: dnsmasq_server_entries
      ignore_errors: true
      changed_when: false

    - name: '[pihole] Backup /etc/dnsmasq.d/01-pihole.conf'
      ansible.builtin.copy:
        src: /etc/dnsmasq.d/01-pihole.conf
        dest: /etc/dnsmasq.d/01-pihole.conf.bak
        backup: yes

    - name: '[pihole] Ensure there are no more than 3 server entries in /etc/dnsmasq.d/01-pihole.conf'
      ansible.builtin.command: "sed -i '/^server=/{{N;N;N;s/\\nserver=.*//;}}' /etc/dnsmasq.d/01-pihole.conf"
      when: dnsmasq_server_entries.stdout_lines | length > 3
      notify: Restart pihole-FTL

    - name: '[pihole] Add dnscrypt server if less than 4 entries exist'
      ansible.builtin.lineinfile:
        path: /etc/dnsmasq.d/01-pihole.conf
        line: 'server={{ dnscrypt_ipv4_address }}#{{ dnscrypt_port }}'
        state: present
      when: dnsmasq_server_entries.stdout_lines | length < 4
      notify: Restart pihole-FTL
